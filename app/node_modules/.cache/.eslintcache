[{"D:\\software-engineering-1\\Journaly-Project\\app\\src\\index.js":"1","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\Login.js":"2","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\Dashboard.js":"3","D:\\software-engineering-1\\Journaly-Project\\app\\src\\App.js":"4","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\RegisterForm.js":"5","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\LoginForm.js":"6","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\Calendar.js":"7","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\Planner.js":"8","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\ItemsView.js":"9","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\EventPlanner.js":"10","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\NotePlanner.js":"11","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\TaskPlanner.js":"12","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\index.js":"13","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\App.js":"14","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\Login.js":"15","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\Dashboard.js":"16","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\Calendar.js":"17","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\Planner.js":"18","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\LoginForm.js":"19","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\RegisterForm.js":"20","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\ItemsView.js":"21","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\TaskPlanner.js":"22","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\NotePlanner.js":"23","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\EventPlanner.js":"24"},{"size":327,"mtime":1637028063129,"results":"25","hashOfConfig":"26"},{"size":2173,"mtime":1644405135878,"results":"27","hashOfConfig":"26"},{"size":11810,"mtime":1644500390961,"results":"28","hashOfConfig":"26"},{"size":1488,"mtime":1644504393915,"results":"29","hashOfConfig":"26"},{"size":4414,"mtime":1644500038969,"results":"30","hashOfConfig":"26"},{"size":2782,"mtime":1644502318496,"results":"31","hashOfConfig":"26"},{"size":6990,"mtime":1644503259603,"results":"32","hashOfConfig":"26"},{"size":8204,"mtime":1644501120517,"results":"33","hashOfConfig":"26"},{"size":893,"mtime":1644405280213,"results":"34","hashOfConfig":"26"},{"size":13169,"mtime":1644405686820,"results":"35","hashOfConfig":"26"},{"size":7784,"mtime":1637564892565,"results":"36","hashOfConfig":"26"},{"size":12042,"mtime":1644502486904,"results":"37","hashOfConfig":"26"},{"size":327,"mtime":1637028063129,"results":"38","hashOfConfig":"39"},{"size":1486,"mtime":1653286609858,"results":"40","hashOfConfig":"39"},{"size":2173,"mtime":1653298407512,"results":"41","hashOfConfig":"39"},{"size":11810,"mtime":1651552360847,"results":"42","hashOfConfig":"39"},{"size":6990,"mtime":1644503259603,"results":"43","hashOfConfig":"39"},{"size":8204,"mtime":1651844057124,"results":"44","hashOfConfig":"39"},{"size":2739,"mtime":1651552871109,"results":"45","hashOfConfig":"39"},{"size":4414,"mtime":1644500038969,"results":"46","hashOfConfig":"39"},{"size":893,"mtime":1644405280213,"results":"47","hashOfConfig":"39"},{"size":12042,"mtime":1644502486904,"results":"48","hashOfConfig":"39"},{"size":7784,"mtime":1637564892565,"results":"49","hashOfConfig":"39"},{"size":13169,"mtime":1644405686820,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1w6ybah",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"10nt48l",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"82"},"D:\\software-engineering-1\\Journaly-Project\\app\\src\\index.js",[],["111","112"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\Login.js",["113"],"import React from 'react';\r\nimport LoginForm from './pages/LoginForm';\r\nimport RegisterForm from './pages/RegisterForm';\r\nimport background from './assets/5272.jpg'\r\nimport { Typography } from '@mui/material';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogginActive: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Add .right by default\r\n        this.rightSide.classList.add(\"right\");\r\n    }\r\n\r\n    changeState() {\r\n        const { isLogginActive } = this.state;\r\n        if (isLogginActive) {\r\n            this.rightSide.classList.remove(\"right\");\r\n            this.rightSide.classList.add(\"left\");\r\n        } else {\r\n            this.rightSide.classList.remove(\"left\");\r\n            this.rightSide.classList.add(\"right\");\r\n        }\r\n\r\n        this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\r\n    }\r\n\r\n    render() {\r\n        const { isLogginActive } = this.state;\r\n        const current = isLogginActive ? \"Register\" : \"Login\";\r\n        const currentActive = isLogginActive ? \"login\" : \"register\";\r\n\r\n\r\n        return (\r\n            <div className=\"App\" >\r\n                <div><Typography variant='h3'>JOURNALY</Typography></div>\r\n                <div className=\"login\">\r\n                    <div className=\"container\">\r\n                        {isLogginActive && <LoginForm handleLogin={this.props.handleLogin} containerRef={(ref) => this.current = ref} />}\r\n                        {!isLogginActive && <RegisterForm containerRef={(ref) => this.current = ref} />}\r\n                    </div>\r\n                    <RightSide current={current} currentActive={currentActive} containerRef={ref => this.rightSide = ref} onClick={this.changeState.bind(this)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst RightSide = props => {\r\n    return (\r\n        <div className=\"right-side\" ref={props.containerRef} onClick={props.onClick}>\r\n            <div className=\"inner-container\">\r\n                <div className=\"text\">{props.current}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\Dashboard.js",["114","115","116","117","118"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\App.js",[],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\RegisterForm.js",["119","120"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\LoginForm.js",["121","122","123"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\Calendar.js",["124","125","126","127","128","129","130","131","132"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\Planner.js",["133","134","135"],"D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\ItemsView.js",["136","137"],"import { React, useState, useEffect } from 'react';\r\nimport NotePlanner from './planners/NotePlanner'\r\nimport EventPlanner from './planners/EventPlanner'\r\nimport TaskPlanner from './planners/TaskPlanner'\r\n\r\nconst ItemsView = ({ currentUser, currentType, currentJournalId }) => {\r\n\r\n    const CurrentPlanner = () => {\r\n        switch (currentType) {\r\n            case \"Notes\":\r\n                return (<NotePlanner user={currentUser} type=\"Note\" journal={currentJournalId} />);\r\n\r\n            case \"Event\":\r\n                return (<EventPlanner user={currentUser} type=\"Event\" journal={currentJournalId} />);\r\n\r\n            case \"Task\":\r\n                return (<TaskPlanner user={currentUser} type=\"Task\" journal={currentJournalId} />);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    return (\r\n        <CurrentPlanner />\r\n    );\r\n}\r\n\r\n\r\nexport default ItemsView;","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\EventPlanner.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import { React, useState, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport {\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Tooltip,\r\n    TextField,\r\n    Button,\r\n    ButtonGroup,\r\n    InputBase,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Grid,\r\n    Item,\r\n    Collapse,\r\n    Checkbox,\r\n    Menu,\r\n    ButtonBase,\r\n    Popover,\r\n    Modal\r\n}\r\n    from '@mui/material';\r\n\r\n\r\n\r\nimport { Form } from 'react-bootstrap'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\r\nimport axios from 'axios';\r\n\r\n\r\nconst EventPlanner = ({ user, type, journal }) => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [anchorAddForm, setAnchorAddForm] = useState(null);\r\n    const [anchorEditForm, setAnchorEditForm] = useState(null);\r\n    const [fetchedEvents, setFetchedEvents] = useState(new Array());\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [anchorDatePicker, setAnchorDatePicker] = useState(null);\r\n\r\n    const datePickerOpen = Boolean(anchorDatePicker);\r\n\r\n    const addFormOpen = Boolean(anchorAddForm);\r\n    const editFormOpen = Boolean(anchorEditForm);\r\n\r\n\r\n    useEffect(() => {\r\n        //Fetch when a journal is selected\r\n        if (journal != null) {\r\n            fetchEvents();\r\n        }\r\n    }, [])\r\n\r\n    const fetchEvents = () => {\r\n        axios.get(`http://localhost:8000/api/items?id=${user.id}&journal=${journal}&type=${type}`)\r\n            .then((result) => { storeFetchedTasks(result.data) });\r\n    }\r\n    const storeFetchedTasks = (events) => {\r\n        setFetchedEvents(events);\r\n    }\r\n\r\n    const toggleEditModal = (toggle) => {\r\n        setEditModalOpen(toggle);\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        axios.delete(`http://localhost:8000/api/allitems/${event.id}/`)\r\n            .then((result => { console.log(result) }))\r\n            .then(() => { fetchEvents() })\r\n    }\r\n\r\n    const handleSetStatus = (event) => {\r\n        let updatedTask = {}\r\n        console.log()\r\n        if (event.status == 'Pending') {\r\n            updatedTask = {\r\n                user: event.user, type: event.type,\r\n                title: event.title, body: event.body, date: event.date, journal: event.journal, status: 'Completed'\r\n            }\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${event.id}/`, updatedTask)\r\n                .then(() => { fetchEvents() })\r\n        }\r\n        else {\r\n            updatedTask = {\r\n                user: event.user, type: event.type,\r\n                title: event.title, body: event.body, date: event.date, journal: event.journal, status: 'Pending'\r\n            }\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${event.id}/`, updatedTask)\r\n                .then(() => { fetchEvents() })\r\n                .catch((error) => { console.log(error.response) })\r\n        }\r\n    }\r\n\r\n    const EventCard = ({ event }) => {\r\n        return (\r\n            <Grid sx={{ boxShadow: 4 }} item lg={4}>\r\n                <Box sx={{ display: 'flex', height: '100%', width: '100%', padding: 0 }}>\r\n                    <Card sx={{ width: '100%', height: '100%' }}>\r\n                        <CardHeader\r\n                            title={event.title}\r\n                            subheader={event.date}\r\n                        />\r\n                        <CardActions disableSpacing>\r\n                            <IconButton aria-label=\"Delete\" onClick={() => handleDelete(event)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"Edit\" onClick={openEditForm} >\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <Checkbox\r\n                                sx={{ marginLeft: 'auto' }}\r\n                                checked={(event.status == 'Completed') ? true : false}\r\n                                onChange={() => { handleSetStatus(event) }}\r\n                            />\r\n                        </CardActions>\r\n                    </Card>\r\n                </Box>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const EditModal = ({ }) => {\r\n        return (\r\n            <Modal\r\n                open={editModalOpen}\r\n                onClose={() => { toggleEditModal(false) }}\r\n                sx={{\r\n                    position: 'absolute', top: '50%', left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    margin: 0\r\n                }}\r\n            >\r\n                <Box height='100%'>\r\n                    <Form >\r\n                        <Form.Control type='text' />\r\n                    </Form>\r\n                </Box>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const filterEvents = () => {\r\n        let events = []\r\n\r\n        fetchedEvents.forEach(event => {\r\n            if (event.date == currentDate.toLocaleDateString()) {\r\n                events.push(event);\r\n            }\r\n        })\r\n\r\n        return events;\r\n    }\r\n\r\n    const renderEvents = () => {\r\n        let display = filterEvents();\r\n\r\n        return (\r\n            display.map(event => {\r\n                return <EventCard id={event.id} key={event.id} event={event} />\r\n            })\r\n        );\r\n    }\r\n\r\n    const EditForm = ({ currEvent }) => {\r\n        const [eventTitle, setEventTitle] = useState(currEvent.title);\r\n\r\n\r\n        const handleChangeTitle = (event) => {\r\n            setEventTitle(event.target.value);\r\n        }\r\n\r\n        const handleEditEvent = (event) => {\r\n            event.preventDefault();\r\n\r\n            let date = new Date();\r\n\r\n            let newEvent = { user: user.id, type: 'Task', title: eventTitle, body: null, date: date.toLocaleDateString(), journal: journal, status: currEvent.status };\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${currEvent.id}/`, newEvent)\r\n                .then(() => { fetchEvents() })\r\n\r\n\r\n        }\r\n\r\n        return (\r\n            <Menu\r\n                sx={{ padding: 3 }}\r\n                open={editFormOpen}\r\n                onClose={closeEditForm}\r\n                anchorEl={anchorEditForm}\r\n            >\r\n                <Box display='flex'>\r\n                    <Form onSubmit={handleEditEvent}>\r\n                        <Form.Control onChange={handleChangeTitle} id=\"taskField\" type=\"text\" defaultValue={currEvent.title} />\r\n                        <Button margin='auto' type='submit'>Edit</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    //This is the Form for adding Events and Tasks\r\n    const AddForm = () => {\r\n        const [eventTitle, setEventTitle] = useState('');\r\n\r\n        const handleChangeTitle = (event) => {\r\n            setEventTitle(event.target.value);\r\n        }\r\n\r\n        const handleAddTask = (event) => {\r\n            event.preventDefault();\r\n\r\n            let date = new Date();\r\n\r\n            let newTask = { user: user.id, type: 'Event', title: eventTitle, body: null, date: date.toLocaleDateString(), journal: journal, status: 'Pending' };\r\n\r\n            axios.post('http://localhost:8000/api/items/', newTask)\r\n                .then((result) => { fetchEvents() })\r\n        }\r\n\r\n        return (\r\n            <Menu\r\n                sx={{ padding: 3 }}\r\n                open={addFormOpen}\r\n                onClose={closeAddForm}\r\n                anchorEl={anchorAddForm}\r\n            >\r\n                <Box display='flex'>\r\n                    <Form onSubmit={handleAddTask}>\r\n                        <Form.Control onChange={handleChangeTitle} id=\"taskField\" type=\"text\" placeholder=\"Enter Event Name\" />\r\n                        <Button margin='auto' type='submit'>Add</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    const handleDateChange = (identifier) => {\r\n        let today = currentDate;\r\n        let newDate = new Date(today);\r\n        newDate.setDate(newDate.getDate() + identifier);\r\n        setCurrentDate(newDate);\r\n\r\n    }\r\n\r\n    const openAddForm = (event) => {\r\n        setAnchorAddForm(event.target);\r\n    }\r\n\r\n    const closeAddForm = () => {\r\n        setAnchorAddForm(null);\r\n    }\r\n\r\n    const openEditForm = (event) => {\r\n        setAnchorEditForm(event.target);\r\n    }\r\n\r\n    const closeEditForm = () => {\r\n        setAnchorEditForm(null);\r\n    }\r\n\r\n    const openDatePicker = (event) => {\r\n        setAnchorDatePicker(event.target);\r\n    }\r\n\r\n    const closeDatePicker = () => {\r\n        setAnchorDatePicker(null);\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='column' height=\"100%\" width=\"100%\" >\r\n            <Box flexGrow={1}>\r\n                <AppBar\r\n                    sx={{ height: '100px', backgroundColor: '#e3f6ff', boxShadow: 4 }}\r\n                    position=\"static\"\r\n                >\r\n                    <Box display='flex' m={3} >\r\n                        <Typography variant='h3' color='black'>\r\n                            EVENTS\r\n                        </Typography>\r\n                        <IconButton onClick={openAddForm}>\r\n                            <AddIcon fontSize='large' />\r\n                        </IconButton>\r\n                        <AddForm />\r\n\r\n                        <Box display='flex' marginLeft='auto'>\r\n                            <IconButton onClick={() => handleDateChange(-1)}>\r\n                                <NavigateBeforeIcon />\r\n                            </IconButton>\r\n\r\n                            <ButtonBase onClick={openDatePicker}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={6} display='flex' textAlign='center'>\r\n\r\n                                        <Typography variant='h3' margin='auto' color='black'>\r\n                                            {currentDate.getDate()}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='caption' color='black' >\r\n                                                {currentDate.toLocaleString('default', { month: 'short' })}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='caption' color='black'>\r\n                                                {currentDate.getFullYear()}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ButtonBase>\r\n\r\n                            <Popover\r\n                                open={datePickerOpen}\r\n                                anchorEl={anchorDatePicker}\r\n                                onClose={closeDatePicker}\r\n                            >\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                    <StaticDatePicker\r\n                                        displayStaticWrapperAs=\"desktop\"\r\n                                        openTo=\"day\"\r\n                                        value={currentDate}\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        onChange={(date) => { setCurrentDate(date) }}\r\n                                        onClose={closeDatePicker}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            </Popover>\r\n\r\n                            <IconButton onClick={() => handleDateChange(1)}>\r\n                                <NavigateNextIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                </AppBar >\r\n            </Box>\r\n            <Box className='eventsView' width='100%' height='100%' p={3} >\r\n                <Grid container spacing={2}>\r\n                    {renderEvents()}\r\n                </Grid>\r\n            </Box>\r\n            <EditModal />\r\n        </Box >\r\n\r\n    );\r\n}\r\n\r\nexport default EventPlanner;","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\NotePlanner.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import { React, useState, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport {\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Tooltip,\r\n    TextField,\r\n    Button,\r\n    ButtonGroup,\r\n    InputBase,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Grid,\r\n    Item,\r\n    Collapse,\r\n    Checkbox,\r\n    Menu,\r\n    ButtonBase,\r\n    Popover\r\n}\r\n    from '@mui/material';\r\n\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\r\n\r\nimport { InputGroup, FormControl, Form } from 'react-bootstrap'\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst NotePlanner = ({ user, type, journal }) => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [fetchedNotes, setFetchedNotes] = useState(new Array());\r\n    const [selectedNote, setSelectedNote] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (journal != null) {\r\n            fetchNotes();\r\n        }\r\n    }, [])\r\n\r\n\r\n    const fetchNotes = () => {\r\n        axios.get(`http://localhost:8000/api/items?id=${user.id}&journal=${journal}&type=${type}`)\r\n            .then((result) => { storeFetchedNotes(result.data) })\r\n    }\r\n\r\n    const storeFetchedNotes = (notes) => {\r\n        setFetchedNotes(notes);\r\n    }\r\n\r\n    const handleNoteSelect = (note) => {\r\n        setSelectedNote(note);\r\n    }\r\n\r\n    const Notes = () => {\r\n        const ItemCard = ({ note }) => {\r\n            return (\r\n                <ListItemButton onClick={() => handleNoteSelect(note)}>\r\n                    <CardContent sx={{ m: 'auto', boxShadow: 3, width: 300 }}>\r\n                        <Typography variant=\"h5\" >\r\n                            {note.title}\r\n                        </Typography>\r\n                        <Typography sx={{ mb: 1.5 }} variant='caption' color=\"text.secondary\">\r\n                            <Typography variant=\"caption\">\r\n                                Last Updated:\r\n                            </Typography>\r\n                            {note.date}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </ListItemButton>\r\n            );\r\n\r\n        }\r\n\r\n        const renderNotes = () => {\r\n            return (\r\n                <>{\r\n                    fetchedNotes.map(note => {\r\n                        return (\r\n                            <ItemCard key={note.id} note={note} />\r\n                        );\r\n                    })\r\n\r\n                }</>\r\n            );\r\n        }\r\n\r\n        function handleAddNote() {\r\n\r\n            let newNote = { user: user.id, type: 'Note', date: currentDate.toLocaleDateString(), journal: journal, status: 'Pending' };\r\n            axios.post('http://localhost:8000/api/items/', newNote)\r\n                .then(() => fetchNotes())\r\n                .catch((error) => { console.log(error.response) })\r\n\r\n            // const notes = [...notesToDisplay];\r\n            // notes.push({ 'Title': 'Untitled', 'Date': new Date().toLocaleDateString() });\r\n        }\r\n\r\n        return (\r\n            <Box className='items' sx={{ height: '100%', m: 3 }}>\r\n                <List sx={{ overflowY: 'auto', height: '80%' }} resize='none'>\r\n                    {renderNotes()}\r\n                </List >\r\n                <IconButton onClick={handleAddNote} sx={{ position: 'fixed', bottom: 0, left: 120 }}>\r\n                    <AddCircleIcon sx={{ height: 64, width: 64 }} />\r\n                </IconButton>\r\n            </Box >\r\n        );\r\n    }\r\n\r\n    const SearchBar = () => {\r\n        return (\r\n            <Box className='searchItem' width={{ lg: '90%' }}>\r\n                <InputGroup className='m-3' style={{ width: '100%' }}>\r\n                    <InputGroup.Text id='inputGroup-sizing-default'>\r\n                        <SearchIcon />\r\n                    </InputGroup.Text>\r\n                    <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                </InputGroup>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    const NoteForm = () => {\r\n        const [title, setTitle] = useState(null);\r\n        const [body, setBody] = useState(null);\r\n\r\n        const handleTitleChange = (event) => {\r\n            setTitle(event.target.value);\r\n        }\r\n\r\n        const handleBodyChange = (event) => {\r\n            setBody(event.target.value);\r\n        }\r\n\r\n        const handleSave = (event) => {\r\n            event.preventDefault();\r\n            let updatedNote = {\r\n                user: selectedNote.user, type: selectedNote.type,\r\n                title: title, body: body, date: currentDate.toLocaleDateString(), journal: selectedNote.journal, status: 'Pending'\r\n            }\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${selectedNote.id}/`, updatedNote)\r\n                .then(() => { fetchNotes() })\r\n        }\r\n\r\n        const handleDelete = (event) => {\r\n            axios.delete(`http://localhost:8000/api/allitems/${selectedNote.id}/`)\r\n                .then(() => { fetchNotes() })\r\n        }\r\n\r\n        return (\r\n            <Box display={{ lg: 'flex' }} flexDirection='column'>\r\n                <Box display='flex' justifyContent='center' className=\"formLabel\" m={3}>\r\n                    <Typography variant='h5'>\r\n                        NOTE DETAILS\r\n                    </Typography>\r\n                </Box>\r\n                <Box className=\"form\" m={3}>\r\n                    <Form onSubmit={handleSave}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Control type=\"text\" placeholder=\"Title\" onChange={handleTitleChange} defaultValue={selectedNote ? selectedNote.title : ''} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control style={{ resize: 'none' }} as=\"textarea\" rows={20} onChange={handleBodyChange} defaultValue={selectedNote ? selectedNote.body : ''} />\r\n                        </Form.Group>\r\n                        <Button id=\"saveNote\" type='submit' sx={{ margin: 'auto' }} >Save</Button>\r\n                        <Button id=\"deleteNote\" onClick={handleDelete} sx={{ marginLeft: 'auto' }} >Delete</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Box display=\"flex\" height=\"100%\">\r\n            <Box\r\n                className='listItemsContainer'\r\n                sx={{\r\n                    display: 'flex',\r\n                    height: '100%',\r\n                    flexDirection: 'column',\r\n                    width: '500px'\r\n                }}\r\n                boxShadow={4}\r\n            >\r\n                <SearchBar />\r\n                <Notes />\r\n            </Box>\r\n            <Box\r\n                sx={{\r\n                    height: '100%',\r\n                    width: '100%'\r\n                }}\r\n                boxShadow={4}\r\n            >\r\n                <NoteForm />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default NotePlanner;","D:\\software-engineering-1\\Journaly-Project\\app\\src\\components\\pages\\planners\\TaskPlanner.js",["191","192","193","194","195"],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\index.js",[],["196","197"],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\App.js",[],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\Login.js",["198"],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\Dashboard.js",["199","200","201","202","203"],"import { useState, useEffect } from 'react';\r\nimport './styles/Dashboard.css'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport { CollectionsBookmark, Event } from '@mui/icons-material';\r\nimport { Link, Outlet, Navigate } from 'react-router-dom'\r\n\r\n\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Popover,\r\n  FormControl,\r\n  TextField,\r\n  Button\r\n}\r\n  from '@mui/material';\r\n\r\nimport EditModal from './pages/planners/TaskPlanner'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nexport default function Dashboard({ authorized, currentUser, handleLogout }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [anchorNotif, setAnchorNotif] = useState(null);\r\n  const [anchorProfile, setAnchorProfile] = useState(null);\r\n  const [primaryMenuOpen, setPrimaryMenuOpen] = useState(false);\r\n\r\n  const isProfileOpen = Boolean(anchorProfile);\r\n  const isAccountMenuOpen = Boolean(anchorEl);\r\n  const isMobileAccountMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const isNotificationOpen = Boolean(anchorNotif)\r\n  const isPrimaryMenuOpen = primaryMenuOpen;\r\n\r\n  //Storage for fetched notifications\r\n  const notifications = [];\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePrimaryMenuOpen = (toggle) => {\r\n    setPrimaryMenuOpen(toggle)\r\n  }\r\n\r\n  const handleProfileOpen = (event) => {\r\n    setAnchorProfile(event.target);\r\n  }\r\n\r\n  const handleProfileClose = () => {\r\n    setAnchorProfile(null)\r\n  }\r\n\r\n  const handleNotifOpen = (event) => {\r\n    setAnchorNotif(event.target);\r\n  }\r\n\r\n  const handleNotifClose = () => {\r\n    setAnchorNotif(null)\r\n  }\r\n\r\n  const accountMenuId = 'account-menu';\r\n  const renderAccountMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={accountMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isAccountMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileAccountMenu = 'primary-search-account-menu-mobile';\r\n\r\n  const renderMobileAcountMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileAccountMenu}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileAccountMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 10 new notifications\"\r\n          color=\"inherit\"\r\n\r\n        >\r\n          <Badge badgeContent={notifications.length} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const NotifTab = () => {\r\n    return (\r\n      <Popover\r\n        open={isNotificationOpen}\r\n        onClose={handleNotifClose}\r\n        anchorEl={anchorNotif}\r\n      >\r\n        <Box display='flex' p={3} justifyContent='center' sx={{ height: '500px', width: '300px' }}>\r\n          <Typography variant='h6'>Notifications</Typography>\r\n          <Box className='notifications' display=\"inherit\" height=\"100%\" sx={{}}>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Popover>\r\n    );\r\n  }\r\n\r\n  function ProfileTab(props) {\r\n\r\n    const [userField, setUserField] = useState('');\r\n    const [emailField, setEmailField] = useState('');\r\n    const [passField, setPassField] = useState('');\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [existing, setExisting] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n    var currUser = props.currentUser;\r\n\r\n    useEffect(() => {\r\n      fetchUser();\r\n    }, [])\r\n\r\n    const fetchUser = () => {\r\n      if (currUser) {\r\n        console.log(currUser);\r\n        axios.get(`http://localhost:8000/api/allusers/${currUser.id}/`)\r\n          .then((result) => setUser(result.data))\r\n      }\r\n    }\r\n\r\n    const handleUsnChange = (event) => {\r\n      setUserField(event.target.value);\r\n    }\r\n\r\n\r\n    const handleEmailChange = (event) => {\r\n      setEmailField(event.target.value);\r\n    }\r\n\r\n    const handlePassChange = (event) => {\r\n      setPassField(event.target.value);\r\n    }\r\n\r\n    const switchToEdit = () => {\r\n      setInEditMode(true);\r\n    }\r\n\r\n    const handleSave = () => {\r\n      checkIfExisting();\r\n\r\n      if (existing) {\r\n        alert('Email is already registered');\r\n        return;\r\n      }\r\n\r\n      let username = userField;\r\n      let email = emailField;\r\n      let password = passField;\r\n\r\n      if (username == '') {\r\n        username = currUser.username;\r\n      }\r\n\r\n      if (email == '') {\r\n        email = currUser.email;\r\n      }\r\n\r\n      if (password == '') {\r\n        password = currUser.password;\r\n      }\r\n\r\n      let updatedUser = { username: username, email: email, password: password };\r\n      alert('Account Updated');\r\n      axios.put(`http://localhost:8000/api/allusers/${user.id}/`, updatedUser)\r\n        .then(() => { setInEditMode(false) })\r\n        .catch((error) => console.log(error.response))\r\n    }\r\n\r\n    const checkIfExisting = () => {\r\n      axios.get(`http://localhost:8000/api/validate?email=${emailField}`)\r\n        .then((results) => {\r\n          if (results.data.length > 0) {\r\n            setExisting(true);\r\n          }\r\n        });\r\n    }\r\n\r\n    if (user) {\r\n      return (\r\n        <Popover\r\n          open={isProfileOpen}\r\n          onClose={handleProfileClose}\r\n          anchorEl={anchorProfile}\r\n        >\r\n          <Box display='flex' flexDirection='column' p={3} alignItems='center' sx={{ height: '500px', width: '300px' }}>\r\n            <Typography variant='h6'>Profile</Typography>\r\n            <FormControl>\r\n              <Box sx={{ marginTop: 2 }}>\r\n                <TextField label='Username' variant='filled' disabled={!inEditMode} onChange={handleUsnChange} type='text' defaultValue={user.username} />\r\n              </Box>\r\n              <Box sx={{ marginTop: 2 }}>\r\n                <TextField label='Email' variant='filled' disabled={!inEditMode} onChange={handleEmailChange} type='email' defaultValue={user.email} />\r\n              </Box>\r\n              <Box sx={{ marginTop: 2 }}>\r\n                <TextField label='Password' variant='filled' disabled={!inEditMode} onChange={handlePassChange} type='password' defaultValue={user.password} />\r\n              </Box>\r\n              <Box display='flex' sx={{ marginTop: 2 }}>\r\n                <Button sx={{ marginRight: 'auto', width: 100 }} variant='contained' onClick={switchToEdit} disabled={inEditMode}>Edit</Button>\r\n                <Button sx={{ marginLeft: 'auto', width: 100 }} variant='contained' onClick={handleSave} disabled={!inEditMode}>Save</Button>\r\n              </Box>\r\n\r\n              <Button sx={{ marginTop: 2, justifyContent: 'center' }} variant='outlined' onClick={handleLogout}>Signout</Button>\r\n            </FormControl>\r\n          </Box >\r\n        </Popover >\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  const renderPrimaryMenu = () => {\r\n\r\n    return (\r\n      <>\r\n        <List>\r\n          <Link to='/dashboard/planner'>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                <CollectionsBookmark color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Journals\" />\r\n            </ListItemButton>\r\n          </Link>\r\n\r\n\r\n          <Link to='/dashboard/calendar'>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                <Event color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Calendar\" />\r\n            </ListItemButton>\r\n          </Link>\r\n        </List>\r\n      </>\r\n    );\r\n\r\n  }\r\n\r\n  //If user is authorized, render dashboard\r\n  if (authorized) {\r\n    return (\r\n      <Box sx={{ flexGrow: 1, height: '100%' }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              aria-label=\"open drawer\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => handlePrimaryMenuOpen(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Drawer\r\n              anchor={'left'}\r\n              open={isPrimaryMenuOpen}\r\n              onClose={() => handlePrimaryMenuOpen(false)}\r\n            >\r\n              {renderPrimaryMenu()}\r\n            </Drawer>\r\n\r\n\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}\r\n            >\r\n              JOURNALY\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n                onClick={handleNotifOpen}\r\n              >\r\n                <Badge badgeContent={notifications.length} color=\"error\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={accountMenuId}\r\n                aria-haspopup=\"true\"\r\n                sx={{ color: 'white' }}\r\n                onClick={handleProfileOpen}\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n\r\n\r\n            </Box>\r\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileAccountMenu}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMobileAcountMenu}\r\n        {renderAccountMenu}\r\n        <NotifTab />\r\n        <ProfileTab currentUser={currentUser} />\r\n        <Outlet />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  //Redirect to login page if user is not authorized\r\n  else {\r\n    return (<Navigate to='/' />);\r\n  }\r\n}\r\n","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\Calendar.js",["204","205","206","207","208","209","210","211","212"],"import FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport momentPlugin from '@fullcalendar/moment'\r\n\r\nimport { React, useState, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport {\r\n    Drawer,\r\n    List,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Button,\r\n    ButtonGroup,\r\n}\r\n    from '@mui/material';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst Calendar = ({ currentUser }) => {\r\n    const [fetchedItems, setFetchedItems] = useState('');\r\n    const [itemsToDisplay, setItemsToDisplay] = useState(null)\r\n    const [currentJournal, setCurrentJournal] = useState(null);\r\n    const [currentItemType, setCurrentItemType] = useState(null);\r\n    const [fetchedJournals, setFetchedJournals] = useState(null);\r\n    const [isJournalsMenuOpen, setJournalsMenuOpen] = useState(false);\r\n    const [currentJournalId, setcurrentJournalId] = useState(null);\r\n    const [anchorAddForm, setAnchorAddForm] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchAllItems();\r\n        fetchJournals();\r\n    }, [])\r\n\r\n    const fetchAllItems = () => {\r\n        axios.get(`http://localhost:8000/api/alluseritems/?id=${currentUser.id}`)\r\n            .then((result) => { storeFetchedItems(result.data) })\r\n    }\r\n\r\n    const fetchJournals = () => {\r\n        axios.get(`http://localhost:8000/api/journals?id=${currentUser.id}`)\r\n            .then((result) => { storeFetchedJournals(result.data) });\r\n    }\r\n\r\n    const storeFetchedItems = (items) => {\r\n        if (items.length > 0) {\r\n            let formattedItems = items.map(item => formatDate(item));\r\n            console.log(formattedItems)\r\n            setFetchedItems(formattedItems);\r\n        }\r\n    }\r\n\r\n    const storeFetchedJournals = (journals) => {\r\n        if (journals.length > 0) {\r\n            setFetchedJournals(journals);\r\n        }\r\n    }\r\n\r\n    function formatDate(item) {\r\n        let date = new Date(item.date);\r\n\r\n        let formattedDate = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\r\n        item.date = formattedDate;\r\n        console.log(item);\r\n        return item;\r\n    }\r\n\r\n    const renderJournalsMenu = () => {\r\n        if (Boolean(fetchedJournals)) {\r\n            return (\r\n                <List>\r\n                    {\r\n                        fetchedJournals.map(journal => {\r\n                            return (\r\n                                <JournalItem key={journal.id} journal={journal} />\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    function openAddForm(event) {\r\n        setAnchorAddForm(event.target)\r\n    }\r\n\r\n    function toggleJournalsMenu(toggle) {\r\n        setJournalsMenuOpen(toggle);\r\n    }\r\n\r\n    function handleSelectType(event) {\r\n        let currentType = event.target.textContent;\r\n        let items = [];\r\n\r\n        //If there are fetched items\r\n        if (fetchedItems) {\r\n            fetchedItems.forEach(item => {\r\n                if (item.type == currentType && item.journal == currentJournalId) {\r\n                    items.push(item)\r\n                }\r\n            })\r\n        }\r\n\r\n        setItemsToDisplay(items);\r\n        setCurrentItemType(currentType);\r\n    }\r\n\r\n    function handleSelectJournal(event) {\r\n        let journalId = event.currentTarget.id;\r\n        let journal = event.target.textContent;\r\n        let items = [];\r\n\r\n        //If there are fetched items\r\n        if (fetchedItems) {\r\n            fetchedItems.forEach(item => {\r\n                if (item.type == currentItemType && item.journal == journalId) {\r\n                    items.push(item)\r\n                }\r\n            })\r\n        }\r\n\r\n        setItemsToDisplay(items);\r\n        setCurrentJournal(journal);\r\n        setcurrentJournalId(journalId);\r\n    }\r\n\r\n\r\n    const JournalItem = ({ journal }) => {\r\n        return (\r\n            <ListItemButton id={journal.id} onClick={handleSelectJournal}>\r\n                <ListItemText primary={journal.name} color='blue' />\r\n            </ListItemButton>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            flexGrow: 1,\r\n        }}>\r\n            <AppBar\r\n                sx={{ height: '50px', backgroundColor: 'white' }}\r\n                position=\"static\"\r\n                color=\"secondary\"\r\n            >\r\n                <Toolbar>\r\n                    <Box mx={{ lg: 3 }}>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            size=\"small\"\r\n                            sx={{ paddingBottom: '15px' }}\r\n                            onClick={() => toggleJournalsMenu(true)}\r\n                        >\r\n                            <Typography>\r\n                                {currentJournal ? currentJournal : 'Journals'}\r\n                            </Typography>\r\n                        </Button>\r\n\r\n                        <Drawer\r\n                            className=\"drawerJournals\"\r\n                            anchor={'left'}\r\n                            open={isJournalsMenuOpen}\r\n                            onClose={() => toggleJournalsMenu(false)}\r\n                        >\r\n                            <Box sx={{ padding: '15px' }} mx={{ lg: '10px' }} display={{ display: 'flex' }}>\r\n                                <Typography variant='h5'>\r\n                                    MY JOURNALS\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box >{renderJournalsMenu()}</Box>\r\n                        </Drawer>\r\n\r\n                    </Box>\r\n\r\n                    <Box mx={3}>\r\n                        <ButtonGroup\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            sx={{ paddingBottom: '15px' }}\r\n\r\n                        >\r\n                            <Button onClick={handleSelectType}>Task</Button>\r\n                            <Button onClick={handleSelectType}>Event</Button>\r\n                        </ButtonGroup>\r\n                    </Box>\r\n                </Toolbar >\r\n            </AppBar >\r\n            <Box sx={{ display: 'flex', width: '100%', height: '80%', overflowY: 'auto' }}>\r\n                <Box sx={{ width: '95%', height: '20%', marginLeft: 'auto', marginRight: 'auto' }}>\r\n                    <FullCalendar\r\n                        plugins={[dayGridPlugin]}\r\n                        events={[\r\n                            { title: 'event 1', date: '2019-04-01' },\r\n                            { title: 'event 2', date: '2019-04-02' }\r\n                        ]}\r\n\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Calendar;","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\Planner.js",["213","214","215"],"import { React, useState, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport {\r\n    Drawer,\r\n    List,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Tooltip,\r\n    TextField,\r\n    Button,\r\n    ButtonGroup,\r\n    Menu\r\n}\r\n    from '@mui/material';\r\n\r\nimport ItemsView from './ItemsView'\r\nimport axios from 'axios';\r\nimport { Form } from 'react-bootstrap'\r\n\r\n\r\nconst Planner = ({ currentUser }) => {\r\n    const [currentJournal, setCurrentJournal] = useState(null);\r\n    const [currentJournalId, setcurrentJournalId] = useState(null);\r\n\r\n    const [isJournalsMenuOpen, setJournalsMenuOpen] = useState(false);\r\n    const [currentItemType, setCurrentItemType] = useState(null);\r\n    const [fetchedJournals, setFetchedJournals] = useState(null);\r\n\r\n    const [anchorAddForm, setAnchorAddForm] = useState(null);\r\n    const addFormOpen = Boolean(anchorAddForm);\r\n\r\n\r\n    const fetchJournals = () => {\r\n        axios.get(`http://localhost:8000/api/journals?id=${currentUser.id}`)\r\n            .then((result) => { storeFetchedJournals(result.data) });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchJournals();\r\n    }, [])\r\n\r\n    function storeFetchedJournals(journals) {\r\n        if (journals.length > 0) {\r\n            setFetchedJournals(journals);\r\n        }\r\n    }\r\n\r\n    //Set the current selected journal\r\n    function handleSelectJournal(event) {\r\n        let journalId = event.currentTarget.id;\r\n        let journal = event.target.textContent;\r\n        setCurrentJournal(journal);\r\n        setcurrentJournalId(journalId);\r\n    }\r\n\r\n\r\n    //Set the current item view to display\r\n    function handleSelectType(event) {\r\n        let currentType = event.target.textContent;\r\n        setCurrentItemType(currentType);\r\n    }\r\n\r\n    function toggleJournalsMenu(toggle) {\r\n        setJournalsMenuOpen(toggle);\r\n    }\r\n\r\n    function closeAddForm() {\r\n        setAnchorAddForm(null);\r\n    }\r\n\r\n    function openAddForm(event) {\r\n        setAnchorAddForm(event.target)\r\n    }\r\n\r\n    const renderJournalsMenu = () => {\r\n        if (Boolean(fetchedJournals)) {\r\n            return (\r\n                <List>\r\n                    {\r\n                        fetchedJournals.map(journal => {\r\n                            return (\r\n                                <JournalItem key={journal.id} journal={journal} />\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            );\r\n        }\r\n    }\r\n\r\n    const JournalItem = ({ journal }) => {\r\n\r\n        const handleDelete = () => {\r\n            axios.delete(`http://localhost:8000/api/alljournals/${journal.id}/`)\r\n                .then((result => { console.log(result) }))\r\n                .then(() => { fetchJournals() })\r\n        }\r\n\r\n        return (\r\n            <ListItemButton id={journal.id} onClick={handleSelectJournal}>\r\n                <ListItemText primary={journal.name} color='blue' />\r\n                <Box>\r\n                    <IconButton onClick={handleDelete}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </ListItemButton>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    const AddForm = () => {\r\n        const [journalTitle, setJournalTitle] = useState('');\r\n\r\n\r\n        const handleChangeTitle = (event) => {\r\n            setJournalTitle(event.target.value);\r\n        }\r\n\r\n        const handleAddJournal = (event) => {\r\n            event.preventDefault();\r\n\r\n\r\n            let date = new Date();\r\n\r\n            let currentDate = date.toLocaleDateString();\r\n\r\n            let newJournal = { name: journalTitle, date_created: currentDate, user: currentUser.id };\r\n\r\n            axios.post('http://localhost:8000/api/journals/', newJournal)\r\n                .then((result) => { fetchJournals() })\r\n\r\n        }\r\n\r\n        return (\r\n            <Menu\r\n                sx={{ padding: 3 }}\r\n                open={addFormOpen}\r\n                onClose={closeAddForm}\r\n                anchorEl={anchorAddForm}\r\n            >\r\n                <Box display='flex'>\r\n                    <Form onSubmit={handleAddJournal}>\r\n                        <Form.Control onChange={handleChangeTitle} id=\"taskField\" type=\"text\" placeholder=\"Enter the name of the journal\" required />\r\n                        <Button margin='auto' type='submit'>Add</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            flexGrow: 1,\r\n        }}>\r\n            <AppBar\r\n                sx={{ height: '50px', backgroundColor: 'white' }}\r\n                position=\"static\"\r\n                color=\"secondary\"\r\n            >\r\n                <Toolbar>\r\n                    <Box mx={{ lg: 3 }}>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            size=\"small\"\r\n                            sx={{ paddingBottom: '15px' }}\r\n                            onClick={() => toggleJournalsMenu(true)}\r\n                        >\r\n                            <Typography>\r\n                                {currentJournal ? currentJournal : 'Journals'}\r\n                            </Typography>\r\n                        </Button>\r\n\r\n                        <Drawer\r\n                            className=\"drawerJournals\"\r\n                            anchor={'left'}\r\n                            open={isJournalsMenuOpen}\r\n                            onClose={() => toggleJournalsMenu(false)}\r\n                        >\r\n                            <Box sx={{ padding: '15px' }} mx={{ lg: '10px' }} display={{ display: 'flex' }}>\r\n                                <Typography variant='h5'>\r\n                                    MY JOURNALS\r\n                                </Typography>\r\n\r\n                                <Tooltip title='Add'>\r\n                                    <IconButton\r\n                                        mx={{ lg: '15px' }}\r\n                                        onClick={openAddForm}\r\n                                    >\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n\r\n\r\n                            </Box>\r\n                            <Box >{renderJournalsMenu()}</Box>\r\n                        </Drawer>\r\n\r\n                    </Box>\r\n\r\n                    <Box mx={3}>\r\n                        <ButtonGroup\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            sx={{ paddingBottom: '15px' }}\r\n\r\n                        >\r\n                            <Button onClick={handleSelectType}>Task</Button>\r\n                            <Button onClick={handleSelectType}>Event</Button>\r\n                            <Button onClick={handleSelectType}>Notes</Button>\r\n                        </ButtonGroup>\r\n                    </Box>\r\n                </Toolbar >\r\n            </AppBar >\r\n            <Box\r\n                position='static'\r\n                sx={{ display: 'flex' }}\r\n                height='100%'\r\n                mx={{ xl: '200px', md: '0' }}\r\n            >\r\n                <Box\r\n                    className='itemsView'\r\n                    sx={{\r\n                        display: 'flex',\r\n                        height: '100%',\r\n                        flexDirection: 'column',\r\n                        width: '100%'\r\n                    }}\r\n                    boxShadow={4}\r\n                >\r\n                    {currentJournal ? <ItemsView currentUser={currentUser} currentType={currentItemType} currentJournalId={currentJournalId} /> : null}\r\n                </Box>\r\n            </Box>\r\n            <AddForm />\r\n        </Box >\r\n    );\r\n}\r\n\r\nexport default Planner;","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\LoginForm.js",["216","217"],"import React from \"react\";\r\nimport \"../styles/style.scss\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate, Navigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst LoginForm = ({ handleLogin, containerRef }) => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [fetchedUser, setFetchedUser] = React.useState(null);\r\n    const hasFetchedUser = Boolean(fetchedUser);\r\n\r\n    //If the user is authorized, redirect to dashboard\r\n    if (hasFetchedUser) {\r\n        console.log(\"Has fetched user!\")\r\n        return <Navigate to='dashboard' />\r\n    }\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const handlePassChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const validateUser = (user) => {\r\n        //Authorize user when there is a fetched data\r\n        if (user.length > 0) {\r\n            //Extracts the user from the array \r\n            setFetchedUser(user[0]);\r\n            handleLogin(true, user[0]);\r\n\r\n        } else {\r\n            alert('Given Journaly account does not exist. Try again or register a new one')\r\n        }\r\n    }\r\n\r\n    //Handles login submit and validate the user\r\n    const handleSubmit = (event) => {\r\n\r\n        axios.get(`http://localhost:8000/api/users?email=${email}&password=${password}`)\r\n            .then((result) => { validateUser(result.data) })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"base-container\" ref={containerRef}>\r\n            <div className=\"header\"><Typography variant='h5'>LOGIN</Typography></div>\r\n            <div className=\"content\">\r\n                <div className=\"image\">\r\n\r\n                </div>\r\n                <div className=\"form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <input type=\"email\" name=\"Email Address\" placeholder=\"Enter your email\"\r\n                            onChange={handleEmailChange} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\"\r\n                            placeholder=\"Enter your password\" onChange={handlePassChange} required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <button className=\"btn\" type=\"submit\">Login</button>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default LoginForm;","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\RegisterForm.js",["218","219"],"import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport \"../styles/style.scss\";\r\nimport { Navigate } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nclass Register extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            existing: false,\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            rePassword: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleUsnChange = this.handleUsnChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.handleRePassChange = this.handleRePassChange.bind(this);\r\n        this.validateUserCredentials = this.validateUserCredentials.bind(this);\r\n    }\r\n\r\n    handleEmailChange(event) {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    handleUsnChange(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    handlePassChange(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleRePassChange(event) {\r\n        this.setState({ rePassword: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(event) {\r\n        let validated = this.validateUserCredentials()\r\n\r\n        if (validated) {\r\n            let newAccount = { username: this.state.username, email: this.state.email, password: this.state.password };\r\n\r\n            axios.post('http://localhost:8000/api/users/', newAccount);\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    isExisting() {\r\n        axios.get(`http://localhost:8000/api/validate?email=${this.state.email}`)\r\n            .then((results) => {\r\n                if (results.data.length > 0) {\r\n                    this.setState({ existing: true })\r\n                }\r\n            });\r\n    }\r\n\r\n    validateUserCredentials() {\r\n        this.isExisting()\r\n        //Check if both passwords matched\r\n\r\n        if (this.state.password != this.state.rePassword) {\r\n            alert('Passwords do not match!');\r\n            return false;\r\n        }\r\n\r\n        //Check if account already exist\r\n        else if (this.state.existing) {\r\n            alert('Email is already registered!');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        if (this.validated) {\r\n            return <Navigate to='/' />\r\n        }\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"base-container\" ref={this.props.containerRef}>\r\n                <div className=\"header\"><Typography variant='h5'>REGISTER</Typography></div>\r\n                <div className=\"content\">\r\n                    <div className=\"image\">\r\n                        {/* <img src={loginImg} /> */}\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input type=\"text\" name=\"username\" onChange={this.handleUsnChange} placeholder=\"Enter your username\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" name=\"email\" onChange={this.handleEmailChange} placeholder=\"Enter your email\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" onChange={this.handlePassChange} placeholder=\"Enter your password\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_2\">Re-type Password</label>\r\n                            <input type=\"password\" name=\"password_2\" onChange={this.handleRePassChange} placeholder=\"Confirm your password\" required />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <button type=\"submit\" className=\"btn\">Register</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\ItemsView.js",["220","221"],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\TaskPlanner.js",["222","223","224","225","226"],"import { React, useState, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardActions,\r\n    Grid,\r\n    Checkbox,\r\n    Menu,\r\n    ButtonBase,\r\n    Popover,\r\n} from '@mui/material';\r\n\r\nimport { Form } from 'react-bootstrap'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\r\nimport axios from 'axios';\r\n\r\n\r\nconst TaskPlanner = ({ user, type, journal }) => {\r\n    const [tasksToDisplay, setTasksToDisplay] = useState(new Array())\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [anchorAddForm, setAnchorAddForm] = useState(null);\r\n    const [anchorEditForm, setAnchorEditForm] = useState(null);\r\n    const [fetchedTasks, setFetchedTasks] = useState(new Array());\r\n    const [anchorDatePicker, setAnchorDatePicker] = useState(null);\r\n\r\n    const datePickerOpen = Boolean(anchorDatePicker);\r\n\r\n    const editFormOpen = Boolean(anchorEditForm);\r\n    const addFormOpen = Boolean(anchorAddForm);\r\n\r\n    const fetchTasks = () => {\r\n        axios.get(`http://localhost:8000/api/items?id=${user.id}&journal=${journal}&type=${type}`)\r\n            .then((result) => { storeFetchedTasks(result.data) });\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Fetch when a journal is selected\r\n        if (journal != null) {\r\n            fetchTasks();\r\n        }\r\n    }, [])\r\n\r\n    const storeFetchedTasks = (tasks) => {\r\n        setFetchedTasks(tasks);\r\n    }\r\n\r\n\r\n    const handleDelete = (task) => {\r\n        axios.delete(`http://localhost:8000/api/allitems/${task.id}/`)\r\n            .then((result => { console.log(result) }))\r\n            .then(() => { fetchTasks() })\r\n    }\r\n\r\n    const handleSetStatus = (task) => {\r\n        let updatedTask = {};\r\n\r\n        if (task.status === 'Pending') {\r\n            updatedTask = {\r\n                user: task.user, type: task.type,\r\n                title: task.title, body: task.body, date: task.date, journal: task.journal, status: 'Completed'\r\n            }\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${task.id}/`, updatedTask)\r\n                .then(() => { fetchTasks() })\r\n        }\r\n        else {\r\n            updatedTask = {\r\n                user: task.user, type: task.type,\r\n                title: task.title, body: task.body, date: task.date, journal: task.journal, status: 'Pending'\r\n            }\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${task.id}/`, updatedTask)\r\n                .then(() => { fetchTasks() })\r\n                .catch((error) => { console.log(error.response) })\r\n        }\r\n    }\r\n\r\n    const TaskCard = ({ task }) => {\r\n        return (\r\n            <Grid sx={{ boxShadow: 4 }} item lg={4}>\r\n                <Box sx={{ display: 'flex', height: '100%', width: '100%', padding: 0 }}>\r\n                    <Card sx={{ width: '100%', height: '100%' }}>\r\n                        <CardHeader\r\n                            title={task.title}\r\n                            subheader={task.date}\r\n                        />\r\n                        <CardActions disableSpacing>\r\n                            <IconButton aria-label=\"Delete\" onClick={() => handleDelete(task)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"Edit\" onClick={openEditForm}>\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <EditForm currTask={task} />\r\n                            <Checkbox\r\n                                sx={{ marginLeft: 'auto' }}\r\n                                checked={(task.status === 'Completed') ? true : false}\r\n                                onChange={() => { handleSetStatus(task) }}\r\n                            />\r\n                        </CardActions>\r\n                    </Card>\r\n                </Box>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const filterTasks = () => {\r\n        let tasks = []\r\n\r\n        fetchedTasks.forEach(task => {\r\n            if (task.date === currentDate.toLocaleDateString()) {\r\n                tasks.push(task);\r\n            }\r\n        })\r\n\r\n        // setTasksToDisplay(tasks);\r\n        return tasks;\r\n    }\r\n\r\n    const renderTasks = () => {\r\n        let display = filterTasks();\r\n\r\n        return (\r\n            display.map(task => {\r\n                return <TaskCard id={task.id} key={task.id} task={task} />\r\n            })\r\n        );\r\n    }\r\n\r\n    const EditForm = ({ currTask }) => {\r\n        const [taskTitle, setTaskTitle] = useState(currTask.title);\r\n\r\n\r\n        const handleChangeTitle = (event) => {\r\n            setTaskTitle(event.target.value);\r\n        }\r\n\r\n        const handleEditTask = (event) => {\r\n            event.preventDefault();\r\n\r\n            let date = new Date();\r\n\r\n            let newTask = { user: user.id, type: 'Task', title: taskTitle, body: null, date: date.toLocaleDateString(), journal: journal, status: currTask.status };\r\n\r\n            axios.put(`http://localhost:8000/api/allitems/${currTask.id}/`, newTask)\r\n                .then(() => { fetchTasks() })\r\n\r\n\r\n        }\r\n\r\n        return (\r\n            <Menu\r\n                sx={{ padding: 3 }}\r\n                open={editFormOpen}\r\n                onClose={closeEditForm}\r\n                anchorEl={anchorEditForm}\r\n            >\r\n                <Box display='flex'>\r\n                    <Form onSubmit={handleEditTask}>\r\n                        <Form.Control onChange={handleChangeTitle} id=\"taskField\" type=\"text\" defaultValue={currTask.title} />\r\n                        <Button margin='auto' type='submit'>Edit</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    const AddForm = () => {\r\n        const [taskTitle, setTaskTitle] = useState('');\r\n\r\n\r\n        const handleChangeTitle = (event) => {\r\n            setTaskTitle(event.target.value);\r\n        }\r\n\r\n        const handleAddTask = (event) => {\r\n            event.preventDefault();\r\n\r\n            let date = new Date();\r\n\r\n            let newTask = { user: user.id, type: 'Task', title: taskTitle, body: null, date: date.toLocaleDateString(), journal: journal, status: 'Pending' };\r\n\r\n            axios.post('http://localhost:8000/api/items/', newTask)\r\n                .then((result) => { fetchTasks() })\r\n        }\r\n\r\n        return (\r\n            <Menu\r\n                sx={{ padding: 3 }}\r\n                open={addFormOpen}\r\n                onClose={closeAddForm}\r\n                anchorEl={anchorAddForm}\r\n            >\r\n                <Box display='flex'>\r\n                    <Form onSubmit={handleAddTask}>\r\n                        <Form.Control onChange={handleChangeTitle} id=\"taskField\" type=\"text\" placeholder=\"Enter Task\" />\r\n                        <Button margin='auto' type='submit'>Add</Button>\r\n                    </Form>\r\n                </Box>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    const handleDateChange = (identifier) => {\r\n        let today = currentDate;\r\n        let newDate = new Date(today);\r\n        newDate.setDate(newDate.getDate() + identifier);\r\n        setCurrentDate(newDate);\r\n\r\n    }\r\n\r\n    const openAddForm = (event) => {\r\n        setAnchorAddForm(event.target);\r\n    }\r\n\r\n    const closeAddForm = () => {\r\n        setAnchorAddForm(null);\r\n    }\r\n\r\n    const openEditForm = (event) => {\r\n        setAnchorEditForm(event.target)\r\n    }\r\n\r\n    const closeEditForm = () => {\r\n        setAnchorEditForm(null)\r\n    }\r\n\r\n    const openDatePicker = (event) => {\r\n        setAnchorDatePicker(event.target);\r\n    }\r\n\r\n    const closeDatePicker = () => {\r\n        setAnchorDatePicker(null);\r\n    }\r\n\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='column' height=\"100%\" width=\"100%\" >\r\n            <Box flexGrow={1}>\r\n                <AppBar\r\n                    sx={{ height: '100px', backgroundColor: '#e3f6ff', boxShadow: 4 }}\r\n                    position=\"static\"\r\n                >\r\n                    <Box display='flex' m={3} >\r\n                        <Typography variant='h3' color='black'>\r\n                            TASKS\r\n                        </Typography>\r\n                        <IconButton onClick={openAddForm}>\r\n                            <AddIcon fontSize='large' />\r\n                        </IconButton>\r\n                        <AddForm />\r\n\r\n\r\n                        <Box display='flex' marginLeft='auto'>\r\n                            <IconButton onClick={() => handleDateChange(-1)}>\r\n                                <NavigateBeforeIcon />\r\n                            </IconButton>\r\n\r\n                            <ButtonBase onClick={openDatePicker}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={6} display='flex' textAlign='center'>\r\n\r\n                                        <Typography variant='h3' margin='auto' color='black'>\r\n                                            {currentDate.getDate()}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='caption' color='black' >\r\n                                                {currentDate.toLocaleString('default', { month: 'short' })}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='caption' color='black'>\r\n                                                {currentDate.getFullYear()}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ButtonBase>\r\n\r\n                            <Popover\r\n                                open={datePickerOpen}\r\n                                anchorEl={anchorDatePicker}\r\n                                onClose={closeDatePicker}\r\n                            >\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                    <StaticDatePicker\r\n                                        displayStaticWrapperAs=\"desktop\"\r\n                                        openTo=\"day\"\r\n                                        value={currentDate}\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        onChange={(date) => { setCurrentDate(date) }}\r\n                                        onClose={closeDatePicker}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            </Popover>\r\n\r\n                            <IconButton onClick={() => handleDateChange(1)}>\r\n                                <NavigateNextIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                </AppBar >\r\n            </Box>\r\n            <Box className='tasksView' width='100%' height='100%' p={3} >\r\n                <Grid container spacing={2}>\r\n                    {renderTasks()}\r\n                </Grid>\r\n            </Box>\r\n        </Box >\r\n\r\n    );\r\n}\r\n\r\nexport default TaskPlanner;","D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\NotePlanner.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"D:\\software-engineering-1\\Journaly-Project-Dev\\app\\src\\components\\pages\\planners\\EventPlanner.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":32,"column":8,"nodeType":"286","messageId":"287","endLine":32,"endColumn":17},{"ruleId":"289","severity":1,"message":"290","line":188,"column":8,"nodeType":"291","endLine":188,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":227,"column":20,"nodeType":"295","messageId":"296","endLine":227,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":231,"column":17,"nodeType":"295","messageId":"296","endLine":231,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":235,"column":20,"nodeType":"295","messageId":"296","endLine":235,"endColumn":22},{"ruleId":"284","severity":1,"message":"297","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":70,"column":33,"nodeType":"295","messageId":"296","endLine":70,"endColumn":35},{"ruleId":"284","severity":1,"message":"299","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":14},{"ruleId":"284","severity":1,"message":"300","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":70,"column":55,"nodeType":"303","messageId":"304","endLine":70,"endColumn":68},{"ruleId":"284","severity":1,"message":"305","line":3,"column":8,"nodeType":"286","messageId":"287","endLine":3,"endColumn":20},{"ruleId":"284","severity":1,"message":"306","line":28,"column":12,"nodeType":"286","messageId":"287","endLine":28,"endColumn":26},{"ruleId":"284","severity":1,"message":"307","line":34,"column":12,"nodeType":"286","messageId":"287","endLine":34,"endColumn":25},{"ruleId":"289","severity":1,"message":"308","line":39,"column":8,"nodeType":"291","endLine":39,"endColumn":10,"suggestions":"309"},{"ruleId":"284","severity":1,"message":"310","line":91,"column":14,"nodeType":"286","messageId":"287","endLine":91,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":106,"column":31,"nodeType":"295","messageId":"296","endLine":106,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":106,"column":62,"nodeType":"295","messageId":"296","endLine":106,"endColumn":64},{"ruleId":"293","severity":1,"message":"294","line":124,"column":31,"nodeType":"295","messageId":"296","endLine":124,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":124,"column":66,"nodeType":"295","messageId":"296","endLine":124,"endColumn":68},{"ruleId":"284","severity":1,"message":"311","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":16},{"ruleId":"284","severity":1,"message":"312","line":17,"column":5,"nodeType":"286","messageId":"287","endLine":17,"endColumn":14},{"ruleId":"289","severity":1,"message":"313","line":48,"column":8,"nodeType":"291","endLine":48,"endColumn":10,"suggestions":"314"},{"ruleId":"284","severity":1,"message":"315","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"316","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"317","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":15},{"ruleId":"284","severity":1,"message":"318","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":18},{"ruleId":"284","severity":1,"message":"319","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":21},{"ruleId":"284","severity":1,"message":"320","line":16,"column":5,"nodeType":"286","messageId":"287","endLine":16,"endColumn":11},{"ruleId":"284","severity":1,"message":"321","line":17,"column":5,"nodeType":"286","messageId":"287","endLine":17,"endColumn":9},{"ruleId":"284","severity":1,"message":"322","line":18,"column":5,"nodeType":"286","messageId":"287","endLine":18,"endColumn":13},{"ruleId":"284","severity":1,"message":"323","line":19,"column":5,"nodeType":"286","messageId":"287","endLine":19,"endColumn":19},{"ruleId":"284","severity":1,"message":"324","line":20,"column":5,"nodeType":"286","messageId":"287","endLine":20,"endColumn":17},{"ruleId":"284","severity":1,"message":"325","line":21,"column":5,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"284","severity":1,"message":"326","line":22,"column":5,"nodeType":"286","messageId":"287","endLine":22,"endColumn":12},{"ruleId":"284","severity":1,"message":"327","line":25,"column":5,"nodeType":"286","messageId":"287","endLine":25,"endColumn":16},{"ruleId":"284","severity":1,"message":"328","line":26,"column":5,"nodeType":"286","messageId":"287","endLine":26,"endColumn":14},{"ruleId":"284","severity":1,"message":"329","line":29,"column":5,"nodeType":"286","messageId":"287","endLine":29,"endColumn":16},{"ruleId":"284","severity":1,"message":"330","line":32,"column":5,"nodeType":"286","messageId":"287","endLine":32,"endColumn":9},{"ruleId":"284","severity":1,"message":"331","line":33,"column":5,"nodeType":"286","messageId":"287","endLine":33,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":55,"column":56,"nodeType":"334","messageId":"335","endLine":55,"endColumn":67},{"ruleId":"289","severity":1,"message":"336","line":70,"column":8,"nodeType":"291","endLine":70,"endColumn":10,"suggestions":"337"},{"ruleId":"293","severity":1,"message":"294","line":93,"column":26,"nodeType":"295","messageId":"296","endLine":93,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":132,"column":56,"nodeType":"295","messageId":"296","endLine":132,"endColumn":58},{"ruleId":"338","severity":1,"message":"339","line":142,"column":24,"nodeType":"340","messageId":"296","endLine":142,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":166,"column":28,"nodeType":"295","messageId":"296","endLine":166,"endColumn":30},{"ruleId":"284","severity":1,"message":"341","line":184,"column":11,"nodeType":"286","messageId":"287","endLine":184,"endColumn":19},{"ruleId":"284","severity":1,"message":"342","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"317","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":15},{"ruleId":"284","severity":1,"message":"343","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":15},{"ruleId":"284","severity":1,"message":"344","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":18},{"ruleId":"284","severity":1,"message":"311","line":11,"column":8,"nodeType":"286","messageId":"287","endLine":11,"endColumn":16},{"ruleId":"284","severity":1,"message":"345","line":12,"column":8,"nodeType":"286","messageId":"287","endLine":12,"endColumn":26},{"ruleId":"284","severity":1,"message":"346","line":13,"column":8,"nodeType":"286","messageId":"287","endLine":13,"endColumn":24},{"ruleId":"284","severity":1,"message":"320","line":16,"column":5,"nodeType":"286","messageId":"287","endLine":16,"endColumn":11},{"ruleId":"284","severity":1,"message":"322","line":18,"column":5,"nodeType":"286","messageId":"287","endLine":18,"endColumn":13},{"ruleId":"284","severity":1,"message":"324","line":20,"column":5,"nodeType":"286","messageId":"287","endLine":20,"endColumn":17},{"ruleId":"284","severity":1,"message":"325","line":21,"column":5,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"284","severity":1,"message":"326","line":22,"column":5,"nodeType":"286","messageId":"287","endLine":22,"endColumn":12},{"ruleId":"284","severity":1,"message":"312","line":23,"column":5,"nodeType":"286","messageId":"287","endLine":23,"endColumn":14},{"ruleId":"284","severity":1,"message":"327","line":25,"column":5,"nodeType":"286","messageId":"287","endLine":25,"endColumn":16},{"ruleId":"284","severity":1,"message":"328","line":26,"column":5,"nodeType":"286","messageId":"287","endLine":26,"endColumn":14},{"ruleId":"284","severity":1,"message":"347","line":27,"column":5,"nodeType":"286","messageId":"287","endLine":27,"endColumn":9},{"ruleId":"284","severity":1,"message":"348","line":28,"column":5,"nodeType":"286","messageId":"287","endLine":28,"endColumn":15},{"ruleId":"284","severity":1,"message":"349","line":30,"column":5,"nodeType":"286","messageId":"287","endLine":30,"endColumn":16},{"ruleId":"284","severity":1,"message":"350","line":31,"column":5,"nodeType":"286","messageId":"287","endLine":31,"endColumn":9},{"ruleId":"284","severity":1,"message":"330","line":32,"column":5,"nodeType":"286","messageId":"287","endLine":32,"endColumn":9},{"ruleId":"284","severity":1,"message":"331","line":33,"column":5,"nodeType":"286","messageId":"287","endLine":33,"endColumn":13},{"ruleId":"284","severity":1,"message":"351","line":34,"column":5,"nodeType":"286","messageId":"287","endLine":34,"endColumn":13},{"ruleId":"284","severity":1,"message":"352","line":35,"column":5,"nodeType":"286","messageId":"287","endLine":35,"endColumn":9},{"ruleId":"284","severity":1,"message":"353","line":36,"column":5,"nodeType":"286","messageId":"287","endLine":36,"endColumn":15},{"ruleId":"284","severity":1,"message":"354","line":37,"column":5,"nodeType":"286","messageId":"287","endLine":37,"endColumn":12},{"ruleId":"284","severity":1,"message":"355","line":41,"column":8,"nodeType":"286","messageId":"287","endLine":41,"endColumn":22},{"ruleId":"284","severity":1,"message":"356","line":42,"column":8,"nodeType":"286","messageId":"287","endLine":42,"endColumn":28},{"ruleId":"284","severity":1,"message":"357","line":43,"column":8,"nodeType":"286","messageId":"287","endLine":43,"endColumn":24},{"ruleId":"284","severity":1,"message":"358","line":51,"column":25,"nodeType":"286","messageId":"287","endLine":51,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":52,"column":54,"nodeType":"334","messageId":"335","endLine":52,"endColumn":65},{"ruleId":"289","severity":1,"message":"359","line":59,"column":8,"nodeType":"291","endLine":59,"endColumn":10,"suggestions":"360"},{"ruleId":"284","severity":1,"message":"361","line":33,"column":12,"nodeType":"286","messageId":"287","endLine":33,"endColumn":26},{"ruleId":"284","severity":1,"message":"362","line":33,"column":28,"nodeType":"286","messageId":"287","endLine":33,"endColumn":45},{"ruleId":"332","severity":1,"message":"333","line":33,"column":58,"nodeType":"334","messageId":"335","endLine":33,"endColumn":69},{"ruleId":"332","severity":1,"message":"333","line":37,"column":54,"nodeType":"334","messageId":"335","endLine":37,"endColumn":65},{"ruleId":"289","severity":1,"message":"363","line":55,"column":8,"nodeType":"291","endLine":55,"endColumn":10,"suggestions":"364"},{"ruleId":"280","replacedBy":"365"},{"ruleId":"282","replacedBy":"366"},{"ruleId":"284","severity":1,"message":"285","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":32,"column":8,"nodeType":"286","messageId":"287","endLine":32,"endColumn":17},{"ruleId":"289","severity":1,"message":"290","line":188,"column":8,"nodeType":"291","endLine":188,"endColumn":10,"suggestions":"367"},{"ruleId":"293","severity":1,"message":"294","line":227,"column":20,"nodeType":"295","messageId":"296","endLine":227,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":231,"column":17,"nodeType":"295","messageId":"296","endLine":231,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":235,"column":20,"nodeType":"295","messageId":"296","endLine":235,"endColumn":22},{"ruleId":"284","severity":1,"message":"305","line":3,"column":8,"nodeType":"286","messageId":"287","endLine":3,"endColumn":20},{"ruleId":"284","severity":1,"message":"306","line":28,"column":12,"nodeType":"286","messageId":"287","endLine":28,"endColumn":26},{"ruleId":"284","severity":1,"message":"307","line":34,"column":12,"nodeType":"286","messageId":"287","endLine":34,"endColumn":25},{"ruleId":"289","severity":1,"message":"308","line":39,"column":8,"nodeType":"291","endLine":39,"endColumn":10,"suggestions":"368"},{"ruleId":"284","severity":1,"message":"310","line":91,"column":14,"nodeType":"286","messageId":"287","endLine":91,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":106,"column":31,"nodeType":"295","messageId":"296","endLine":106,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":106,"column":62,"nodeType":"295","messageId":"296","endLine":106,"endColumn":64},{"ruleId":"293","severity":1,"message":"294","line":124,"column":31,"nodeType":"295","messageId":"296","endLine":124,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":124,"column":66,"nodeType":"295","messageId":"296","endLine":124,"endColumn":68},{"ruleId":"284","severity":1,"message":"311","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":16},{"ruleId":"284","severity":1,"message":"312","line":17,"column":5,"nodeType":"286","messageId":"287","endLine":17,"endColumn":14},{"ruleId":"289","severity":1,"message":"313","line":48,"column":8,"nodeType":"291","endLine":48,"endColumn":10,"suggestions":"369"},{"ruleId":"284","severity":1,"message":"299","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":14},{"ruleId":"284","severity":1,"message":"300","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":21},{"ruleId":"284","severity":1,"message":"297","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":70,"column":33,"nodeType":"295","messageId":"296","endLine":70,"endColumn":35},{"ruleId":"284","severity":1,"message":"315","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"316","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"361","line":33,"column":12,"nodeType":"286","messageId":"287","endLine":33,"endColumn":26},{"ruleId":"284","severity":1,"message":"362","line":33,"column":28,"nodeType":"286","messageId":"287","endLine":33,"endColumn":45},{"ruleId":"332","severity":1,"message":"333","line":33,"column":58,"nodeType":"334","messageId":"335","endLine":33,"endColumn":69},{"ruleId":"332","severity":1,"message":"333","line":37,"column":54,"nodeType":"334","messageId":"335","endLine":37,"endColumn":65},{"ruleId":"289","severity":1,"message":"363","line":55,"column":8,"nodeType":"291","endLine":55,"endColumn":10,"suggestions":"370"},{"ruleId":"284","severity":1,"message":"342","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"317","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":15},{"ruleId":"284","severity":1,"message":"343","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":15},{"ruleId":"284","severity":1,"message":"344","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":18},{"ruleId":"284","severity":1,"message":"311","line":11,"column":8,"nodeType":"286","messageId":"287","endLine":11,"endColumn":16},{"ruleId":"284","severity":1,"message":"345","line":12,"column":8,"nodeType":"286","messageId":"287","endLine":12,"endColumn":26},{"ruleId":"284","severity":1,"message":"346","line":13,"column":8,"nodeType":"286","messageId":"287","endLine":13,"endColumn":24},{"ruleId":"284","severity":1,"message":"320","line":16,"column":5,"nodeType":"286","messageId":"287","endLine":16,"endColumn":11},{"ruleId":"284","severity":1,"message":"322","line":18,"column":5,"nodeType":"286","messageId":"287","endLine":18,"endColumn":13},{"ruleId":"284","severity":1,"message":"324","line":20,"column":5,"nodeType":"286","messageId":"287","endLine":20,"endColumn":17},{"ruleId":"284","severity":1,"message":"325","line":21,"column":5,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"284","severity":1,"message":"326","line":22,"column":5,"nodeType":"286","messageId":"287","endLine":22,"endColumn":12},{"ruleId":"284","severity":1,"message":"312","line":23,"column":5,"nodeType":"286","messageId":"287","endLine":23,"endColumn":14},{"ruleId":"284","severity":1,"message":"327","line":25,"column":5,"nodeType":"286","messageId":"287","endLine":25,"endColumn":16},{"ruleId":"284","severity":1,"message":"328","line":26,"column":5,"nodeType":"286","messageId":"287","endLine":26,"endColumn":14},{"ruleId":"284","severity":1,"message":"347","line":27,"column":5,"nodeType":"286","messageId":"287","endLine":27,"endColumn":9},{"ruleId":"284","severity":1,"message":"348","line":28,"column":5,"nodeType":"286","messageId":"287","endLine":28,"endColumn":15},{"ruleId":"284","severity":1,"message":"349","line":30,"column":5,"nodeType":"286","messageId":"287","endLine":30,"endColumn":16},{"ruleId":"284","severity":1,"message":"350","line":31,"column":5,"nodeType":"286","messageId":"287","endLine":31,"endColumn":9},{"ruleId":"284","severity":1,"message":"330","line":32,"column":5,"nodeType":"286","messageId":"287","endLine":32,"endColumn":9},{"ruleId":"284","severity":1,"message":"331","line":33,"column":5,"nodeType":"286","messageId":"287","endLine":33,"endColumn":13},{"ruleId":"284","severity":1,"message":"351","line":34,"column":5,"nodeType":"286","messageId":"287","endLine":34,"endColumn":13},{"ruleId":"284","severity":1,"message":"352","line":35,"column":5,"nodeType":"286","messageId":"287","endLine":35,"endColumn":9},{"ruleId":"284","severity":1,"message":"353","line":36,"column":5,"nodeType":"286","messageId":"287","endLine":36,"endColumn":15},{"ruleId":"284","severity":1,"message":"354","line":37,"column":5,"nodeType":"286","messageId":"287","endLine":37,"endColumn":12},{"ruleId":"284","severity":1,"message":"355","line":41,"column":8,"nodeType":"286","messageId":"287","endLine":41,"endColumn":22},{"ruleId":"284","severity":1,"message":"356","line":42,"column":8,"nodeType":"286","messageId":"287","endLine":42,"endColumn":28},{"ruleId":"284","severity":1,"message":"357","line":43,"column":8,"nodeType":"286","messageId":"287","endLine":43,"endColumn":24},{"ruleId":"284","severity":1,"message":"358","line":51,"column":25,"nodeType":"286","messageId":"287","endLine":51,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":52,"column":54,"nodeType":"334","messageId":"335","endLine":52,"endColumn":65},{"ruleId":"289","severity":1,"message":"359","line":59,"column":8,"nodeType":"291","endLine":59,"endColumn":10,"suggestions":"371"},{"ruleId":"284","severity":1,"message":"317","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":15},{"ruleId":"284","severity":1,"message":"318","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":18},{"ruleId":"284","severity":1,"message":"319","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":21},{"ruleId":"284","severity":1,"message":"320","line":16,"column":5,"nodeType":"286","messageId":"287","endLine":16,"endColumn":11},{"ruleId":"284","severity":1,"message":"321","line":17,"column":5,"nodeType":"286","messageId":"287","endLine":17,"endColumn":9},{"ruleId":"284","severity":1,"message":"322","line":18,"column":5,"nodeType":"286","messageId":"287","endLine":18,"endColumn":13},{"ruleId":"284","severity":1,"message":"323","line":19,"column":5,"nodeType":"286","messageId":"287","endLine":19,"endColumn":19},{"ruleId":"284","severity":1,"message":"324","line":20,"column":5,"nodeType":"286","messageId":"287","endLine":20,"endColumn":17},{"ruleId":"284","severity":1,"message":"325","line":21,"column":5,"nodeType":"286","messageId":"287","endLine":21,"endColumn":17},{"ruleId":"284","severity":1,"message":"326","line":22,"column":5,"nodeType":"286","messageId":"287","endLine":22,"endColumn":12},{"ruleId":"284","severity":1,"message":"327","line":25,"column":5,"nodeType":"286","messageId":"287","endLine":25,"endColumn":16},{"ruleId":"284","severity":1,"message":"328","line":26,"column":5,"nodeType":"286","messageId":"287","endLine":26,"endColumn":14},{"ruleId":"284","severity":1,"message":"329","line":29,"column":5,"nodeType":"286","messageId":"287","endLine":29,"endColumn":16},{"ruleId":"284","severity":1,"message":"330","line":32,"column":5,"nodeType":"286","messageId":"287","endLine":32,"endColumn":9},{"ruleId":"284","severity":1,"message":"331","line":33,"column":5,"nodeType":"286","messageId":"287","endLine":33,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":55,"column":56,"nodeType":"334","messageId":"335","endLine":55,"endColumn":67},{"ruleId":"289","severity":1,"message":"336","line":70,"column":8,"nodeType":"291","endLine":70,"endColumn":10,"suggestions":"372"},{"ruleId":"293","severity":1,"message":"294","line":93,"column":26,"nodeType":"295","messageId":"296","endLine":93,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":132,"column":56,"nodeType":"295","messageId":"296","endLine":132,"endColumn":58},{"ruleId":"338","severity":1,"message":"339","line":142,"column":24,"nodeType":"340","messageId":"296","endLine":142,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":166,"column":28,"nodeType":"295","messageId":"296","endLine":166,"endColumn":30},{"ruleId":"284","severity":1,"message":"341","line":184,"column":11,"nodeType":"286","messageId":"287","endLine":184,"endColumn":19},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"no-unused-vars","'background' is defined but never used.","Identifier","unusedVar","'EditModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["375"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LoginForm' is defined but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'useNavigate' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'momentPlugin' is defined but never used.","'itemsToDisplay' is assigned a value but never used.","'anchorAddForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllItems' and 'fetchJournals'. Either include them or remove the dependency array.",["376"],"'openAddForm' is defined but never used.","'EditIcon' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchJournals'. Either include it or remove the dependency array.",["377"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Toolbar' is defined but never used.","'SearchIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'Drawer' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Tooltip' is defined but never used.","'ButtonGroup' is defined but never used.","'InputBase' is defined but never used.","'CardContent' is defined but never used.","'Item' is defined but never used.","'Collapse' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has missing dependencies: 'fetchEvents' and 'journal'. Either include them or remove the dependency array.",["378"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'EditForm' is assigned a value but never used.","'AppBar' is defined but never used.","'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'NavigateBeforeIcon' is defined but never used.","'NavigateNextIcon' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'Grid' is defined but never used.","'Checkbox' is defined but never used.","'Menu' is defined but never used.","'ButtonBase' is defined but never used.","'Popover' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'StaticDatePicker' is defined but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchNotes' and 'journal'. Either include them or remove the dependency array.",["379"],"'tasksToDisplay' is assigned a value but never used.","'setTasksToDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchTasks' and 'journal'. Either include them or remove the dependency array.",["380"],["373"],["374"],["381"],["382"],["383"],["384"],["385"],["386"],"no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"387","fix":"399"},{"desc":"389","fix":"400"},{"desc":"391","fix":"401"},{"desc":"397","fix":"402"},{"desc":"395","fix":"403"},{"desc":"393","fix":"404"},"Update the dependencies array to be: [fetchUser]",{"range":"405","text":"406"},"Update the dependencies array to be: [fetchAllItems, fetchJournals]",{"range":"407","text":"408"},"Update the dependencies array to be: [fetchJournals]",{"range":"409","text":"410"},"Update the dependencies array to be: [fetchEvents, journal]",{"range":"411","text":"412"},"Update the dependencies array to be: [fetchNotes, journal]",{"range":"413","text":"414"},"Update the dependencies array to be: [fetchTasks, journal]",{"range":"415","text":"416"},{"range":"417","text":"406"},{"range":"418","text":"408"},{"range":"419","text":"410"},{"range":"420","text":"416"},{"range":"421","text":"414"},{"range":"422","text":"412"},[5236,5238],"[fetchUser]",[1210,1212],"[fetchAllItems, fetchJournals]",[1474,1476],"[fetchJournals]",[2089,2091],"[fetchEvents, journal]",[1693,1695],"[fetchNotes, journal]",[1929,1931],"[fetchTasks, journal]",[5236,5238],[1210,1212],[1474,1476],[1929,1931],[1693,1695],[2089,2091]]